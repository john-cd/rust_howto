[package]
name = "d"
version.workspace = true
authors.workspace = true
edition.workspace = true
rust-version.workspace = true
description = "Book code examples and their crate dependencies"
documentation.workspace = true
homepage.workspace = true
repository.workspace = true
license = "CC0-1.0"
keywords.workspace = true
categories.workspace = true
publish = false
readme = "README.md"
# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

## The dependencies that are NOT USED (YET) in examples are marked `optional = true`,
## in order to keep the compile speed decent.
## Remove the optional flag as needed.
[dependencies]

## Data structures
arrayvec = "0.7.6"
bitflags = "2.6.0"
bytes = { version = "1.8.0", optional = true }
dashmap = { version = "6.1.0", optional = true }
flagset = "0.4.6"
indexmap = "2.7.0"
linked-hash-map = { version = "0.5.6", optional = true }
multimap = "0.10.0"
petgraph = { version = "0.6", optional = true }
slotmap = { version = "1.0.7", optional = true }
smallvec = "2.0.0-alpha.8"
tinyvec = { version = "1.8.0", features = ["alloc"] }
uuid = { version = "1.11.0", features = [
    "v4",                # Lets you generate random UUIDs
    "fast-rng",          # Use a faster (but still sufficiently random) RNG
    "macro-diagnostics", # Enable better diagnostics for compile-time UUIDs
] }

## Database and friends
cornucopia = { version = "0.9.0", optional = true }
deadpool = "0.12.1"
deadpool-postgres = { version = "0.14.0", optional = true, features = [ "serde" ] }
diesel = { version = "2.2.4", optional = true }
elasticsearch = { version = "8.15.0-alpha.1", optional = true } # NOTE: alpha version
infisearch = { version = "0.10.1", optional = true }
meilisearch = "0.0.0"
minisearch = { version = "0.1.1", optional = true }
mongodb = "3.1.0"
postgres = "0.19.9"
sqlx = { version = "0.8.2", optional = true }
tinysearch = { version = "0.8.0", optional = true }
tokio = "1.42.0"
tokio-postgres = "0.7"
redis = "0.27.5"
sea-orm = { version = "1.1.1", optional = true }
seaography = { version = "1.1.2", optional = true }
sled = { version = "0.34.7", optional = true }
# stork-search = "1.6.0" # not a lib
tantivy = { version = "0.22.0", optional = true }
typesense = { version = "0.1.0", optional = true }

## Date and time
chrono = "0.4.39"
time = { version = "0.3.36", optional = true }

## Dev Tools
# bacon = { version = "3.2.0", optional = true }
crates_io_api = "0.11.0"
cross = { version = "0.2.5", optional = true }
doc-comment = { version = "0.3", optional = true }
kani = { version = "0.0.1", optional = true }
# mdbook
# mdbook-cmdrun
# mdbook-journal
# mdbook-keeper
# mdbook-linkcheck
# mdbook-pagetoc
# mdbook-private
# mdbook-tera
# mdbook-theme
# mdbook-toc
# miri
semver = "1.0.24"
# termbook = "1.4.2" # requires mdbook; TODO P3 review pre-requisites
yapp = { version = "0.4.1", optional = true }

## Dev Tools: cargo plugins
# cargo
# cargo-auditable
# cargo-cache
# cargo-edit
# cargo-hack
# cargo-husky
# cargo-make
# cargo-nextest
# cargo-tarpaulin
# cargo-udeps
xshell = { version = "0.2.6", optional = true }

## Dev Tools: Debugging
env_logger = "0.11.5"
log = "0.4.22"
log4rs = "1.3.0"
tracing = "0.1.41"
tracing-subscriber = { version = "0.3.19", features = ["env-filter"] }

## Dev Tools: FFI

## Dev Tools: Proc Macros
paste = { version = "1.0.15", optional = true }
proc-macro2 = { version = "1.0.89", optional = true }
quote = { version = "1.0.37", optional = true }
syn = { version = "2.0.87", optional = true }
watt = { version = "0.5.0", optional = true }

## Dev Tools: Profiling

## Dev Tools: Testing
approx = { version = "0.5.1", optional = true}
anyhow = "1.0.94"
dotenvy = "0.15.7"
serde = { version = "1.0.216", features = ["derive"] }

[target.'cfg(target_os = "linux")'.dependencies]
openssl = { version = "0.10", features = ["vendored"] }
rusqlite = { version = "*", features = ["chrono"] }
syslog = "7.0.0"

[dev-dependencies]
## Used for testing
rusty-fork = "0.3.0"

[build-dependencies]
cc = "1.2.4"

[features]

## Dependencies that are CURRENTLY unused in the examples (marked as optional above)
## You may check for conflicts with: cargo build --features unused or cargo build --all-features
unused = [
    "dep:bytes",
    "dep:cornucopia",
    "dep:cross",
    "dep:dashmap",
    "dep:diesel",
    "dep:doc-comment",
    "dep:elasticsearch",
    "dep:infisearch",
    "dep:kani",
    "dep:linked-hash-map",
    "dep:minisearch",
    "dep:paste",
    "dep:petgraph",
    "dep:proc-macro2",
    "dep:quote",
    "dep:seaography",
    "dep:sea-orm",
    "dep:sled",
    "dep:slotmap",
    "dep:sqlx",
    "dep:syn",
    "dep:tantivy",
    "dep:time",
    "dep:tinysearch",
    "dep:typesense",
    "dep:watt",
    "dep:xshell",
    "dep:yapp",
]
