[package]
name = "d"
version.workspace = true
authors.workspace = true
edition.workspace = true
rust-version.workspace = true
description = "Book code examples and their crate dependencies"
documentation.workspace = true
homepage.workspace = true
repository.workspace = true
license = "CC0-1.0"
keywords.workspace = true
categories.workspace = true
publish = false
readme = "README.md"
# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

## The dependencies that are NOT USED (YET) in examples are marked `optional = true`,
## in order to keep the compile speed decent.
## Remove the optional flag as needed.
[dependencies]
approx = "0.5.1"


arrayvec = "0.7.6"
anyhow = "1.0.94"
bitflags = "2.6.0"
# cargo
# cargo-auditable
# cargo-cache
# cargo-edit
# cargo-hack
# cargo-husky
# cargo-make
# cargo-nextest
# cargo-tarpaulin
# cargo-udeps
chrono = "0.4.39"
cornucopia = { version = "0.9.0", optional = true }
crates_io_api = "0.11.0"
cross = { version = "0.2.5", optional = true }
dashmap = "6.1.0"

diesel = { version = "2.2.4", optional = true }
deadpool = "0.12.1"
deadpool-postgres = { version = "0.14.0", optional = true, features = [ "serde" ] }
elasticsearch = { version = "8.15.0-alpha.1", optional = true } # NOTE: alpha version
env_logger = "0.11.5"
flagset = "0.4.6"
indexmap = "2.7.0"
infisearch = { version = "0.10.1", optional = true }
kani = { version = "0.0.1", optional = true }

log = "0.4.22"
log4rs = "1.3.0"
# mdbook
# mdbook-cmdrun
# mdbook-journal
# mdbook-keeper
# mdbook-linkcheck
# mdbook-pagetoc
# mdbook-private
# mdbook-tera
# mdbook-theme
# mdbook-toc
meilisearch = { version = "0.0.0", optional = true }
minisearch = { version = "0.1.1", optional = true }
# miri

mongodb = { version = "3.1.0", optional = true }
multimap = "0.10.0"
paste = { version = "1.0.15", optional = true }

postgres = { version = "0.19.9", optional = true }

proc-macro2 = { version = "1.0.89", optional = true }
quote = { version = "1.0.37", optional = true }

redis = { version = "0.27.5", optional = true }
sea-orm = { version = "1.1.1", optional = true }
seaography = { version = "1.1.2", optional = true }
semver = "1.0.24"
sled = { version = "0.34.7", optional = true }

slotmap = { version = "1.0.7", optional = true }
smallvec = "2.0.0-alpha.8"

sqlx = { version = "0.8.2", optional = true }
syn = { version = "2.0.87", optional = true }

tantivy = { version = "0.22.0", optional = true }

tinyvec = { version = "1.8.0", features = ["alloc"] }
time = "0.3.36"

tokio = "1.42.0"
tokio-postgres = { version = "0.7", optional = true }
tracing = "0.1.41"
tracing-subscriber = "0.3.19"
typesense = { version = "0.1.0", optional = true }
uuid = { version = "1.11.0", features = [
    "v4",                # Lets you generate random UUIDs
    "fast-rng",          # Use a faster (but still sufficiently random) RNG
    "macro-diagnostics", # Enable better diagnostics for compile-time UUIDs
] }

[target.'cfg(target_os = "linux")'.dependencies]
openssl = { version = "0.10", features = ["vendored"] }
rusqlite = { version = "0.32.1", features = ["chrono"] }
syslog = "7.0.0"

[dev-dependencies]
## Used for testing
rusty-fork = "0.3.0"
## We no longer use skeptic - see `build.rs` and the `package.build` setting above.
#skeptic = "0.13"

[build-dependencies]
cc = "1.2.4"
## we no longer use `skeptic` and friends below - see `build.rs` and the `package.build` setting above.
#anyhow = "1"
#build-info-build = "0.0.34"
## The git dependency will be used locally; when published to a registry like crates.io, it will use the registry version.
#mdbook-utils = { git = 'https://github.com/john-cd/mdbook-utils.git', version = "0.*" }
#skeptic = "0.13"
#walkdir = "2"

[features]
## Features for code examples that require an external service / database / cache
elasticsearch = ["dep:elasticsearch"]
meilisearch = ["dep:meilisearch"]
mongodb = ["dep:mongodb"]
postgres = [
    "dep:cornucopia",
    "dep:deadpool-postgres",
    "dep:diesel",
    "dep:postgres",
    "dep:sea-orm",
    "dep:seaography",
    "dep:sqlx",
    "dep:tokio-postgres"
]
redis = ["dep:redis"]
typesense = ["dep:typesense"]



## Use the following compound feature for the rust-analyzer "features" Settings
almost_all = ["elasticsearch", "meilisearch", "mongodb", "postgres", "redis", "typesense"]

## Dependencies that are CURRENTLY unused in the examples (marked as optional above)
## You may check for conflicts with: cargo build --features unused or cargo build --all-features
unused = [
        "dep:tantivy",
]
