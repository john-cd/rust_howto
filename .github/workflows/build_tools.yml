name: Build tools on Linux

on:
  push:
    branches: [ "main" ]
    paths:
      - 'tools/**'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'tools/**'
  workflow_dispatch:

concurrency:
  group: "tools"
  cancel-in-progress: true

defaults:
  run:
    shell: bash
    working-directory: ./tools

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    # Checks out your repository under $GITHUB_WORKSPACE
    - name: Code checkout (clones the Git repository)
      uses: actions/checkout@v5

    - name: Cache Cargo registry and dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          /usr/local/cargo/bin/
          /usr/local/cargo/registry/index/
          /usr/local/cargo/registry/cache/
          /usr/local/cargo/git/db/
          tools/target/
          target/
        key: rust_howto-tools-${{ runner.os }}-cargo-${{ hashFiles('tools/Cargo.lock') }}
        restore-keys: |
          rust_howto-tools-${{ runner.os }}-cargo-

    - name: Install binstall
      run: curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash

    - name: Install nextest
      run: cargo binstall --no-confirm --secure --force cargo-nextest

    - name: Install just
      run: cargo binstall --no-confirm --force just

    - name: Update Rust; Install nightly Rust
      run: |
        rustup update stable
        rustup default stable
        rustup toolchain install nightly
        rustup component add rustfmt --toolchain nightly
        rustup show

    - name: Check the format
      run: just fa

    - name: Build
      run: just ba

    - name: Clippy
      run: just ca

    - name: Run tests
      run: just nta

    - name: Build in release mode
      run: just release
