set fallback

[no-exit-message]
_default:
  @just --list --unsorted --justfile {{source_file()}}

## ---- DEFAULT -------------------------------------

# [would like to use `bash` as the shell, when on Windows, rather than](https://github.com/john-cd/rust_howto/issues/1249)
#set windows-shell := ["pwsh.exe", "-NoLogo", "-Command"]
#set windows-shell := ["cmd.exe", "/c"]

# 1) Could call WSL bash via
# set windows-shell := ["bash.exe", "-uc"]
# but would requires identical rustup / just config in Windows and WSL,
# starting with `sudo snap install just --classic`

# 2) Git Bash opens a separate window, so no cigar
# set windows-shell := ["C:\\Program Files\\Git\\git-bash.exe", "-uc"]

# 3) Cygwin
# - Requires cygwin installation

set windows-shell := [ "C:\\cygwin64\\bin\\bash.exe", "-uc"]

@pwd:
    echo '{{absolute_path(".")}}'

@test:
    echo '{{just_executable()}}'
    echo '{{justfile()}}'
    echo '{{justfile_directory()}}'
    echo '{{source_directory()}}'
    echo '{{invocation_directory()}}'

# [make [script] work](https://github.com/john-cd/rust_howto/issues/1250)

set unstable

set script-interpreter := [ "C:\\cygwin64\\bin\\bash.exe", "-u"]

[windows]
[script]
@test2:
    echo '{{just_executable()}}'
    echo '{{justfile()}}'
    echo '{{justfile_directory()}}'
    echo '{{source_directory()}}'
    echo '{{invocation_directory()}}'
    PATH="/bin:$PATH" && echo "$PATH"; pwd

# [make cypath conversion work](https://github.com/john-cd/rust_howto/issues/1251)

# p := shell('bin/cygpath --unix "$1"', 'D:\')

#command := 'cygpath'
#output := shell(command + ' "$1"', justfile_directory())

#test3:
#    echo '{{ p }}'

# [convert Windows path to Cygwin path](https://github.com/john-cd/rust_howto/issues/1252)

root := if os_family() == 'windows' {
  quote(replace(justfile_directory(), '\', '/'))
} else {
  quote(justfile_directory())
}

# [review https://github.com/casey/just/issues/2599](https://github.com/john-cd/rust_howto/issues/1253)
