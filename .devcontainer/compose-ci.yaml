name: rust_howto_ci
services:
  book:
    # When pull_policy is missing from the service definition, Compose attempts to pull the image first
    # and then builds from source if the image isn't found in the registry or platform cache.
    # IMAGE_VERSION = version of the Docker image to create e.g. 0.1.0
    image: johncd/rust_howto_ci:${IMAGE_VERSION:-latest}  # Name and tag of the image that will be built
    build:
      target: ci
      cache_from:
        ## Cache from sibling
        - johncd/rust_howto_dev:${IMAGE_VERSION:-latest}
        ## Registry cache: https://docs.docker.com/build/ci/github-actions/cache/#registry-cache
        ## This cache storage backend is not supported with the default `docker` driver.
        - type=registry,ref=johncd/rust_howto_ci:buildcache
        ## GitHub Action cache https://docs.docker.com/build/ci/github-actions/cache/#github-cache
        ## As above, it only works when using a buildx builder with `docker-container` driver, etc in a GitHub Actions workflow
        ## Ignored otherwise
        ## TODO P1 make gha caching work
        - type=gha,scope=rust_howto_ci
      cache_to:
        ##  In the `max` cache mode, all docker layers are cached, even those of intermediate steps.
        - type=registry,ref=johncd/rust_howto_ci:buildcache,mode=max
        - type=gha,mode=max,scope=rust_howto_ci
    volumes:
      ## Path where the container will write the book HTML / JS to, on the CI host (provided by GitHub Action)
      - type: bind
        source: ../book
        target: /code/book
        bind:
          create_host_path: true
      ## bind mounts do not work when trying to cache /usr/local/cargo, since it obscures the pre-existing contents of the folder in the docker layer
      ## TODO P1 use tmpfs mounts to speed up the build process; first measure the folder sizes on the github runner
      # - type: tmpfs
      #   target: /usr/local/cargo/
